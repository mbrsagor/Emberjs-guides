"""
Django settings for ecommerce project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))
BASE_DIR = os.path.dirname(PROJECT_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ')$dg_9wb98*4vyqwv6_6ft^+g@rjuw$il3p4_181km*y0$_1s4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    '*'
]

from oscar import get_core_apps

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.humanize',
    'widget_tweaks',
    'django_filters',
    'sekizai',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'phonenumber_field',
    'django_extensions',

    'dit_email_addon',

    'ecommerce.core',
    'djangohyper',
    'ecommerce.flatpages',
    'ecommerce.quotation',

    'rest_framework',
    'easy_thumbnails',
    'filer',
    'mptt',
    'constance',
    'constance.backends.database',
    'ecommerce.core.api',
    'pricing.pyapp',
    'autodeploy',

 ] + get_core_apps([
    'ecommerce.promotions',
    'ecommerce.dashboard',
    'ecommerce.dashboard.extensions',
    'ecommerce.dashboard.catalogue',
    'ecommerce.dashboard.orders',
    'ecommerce.dashboard.users',
    'ecommerce.catalogue',
    'ecommerce.customer',
    'ecommerce.partner',
    'ecommerce.basket',
    'ecommerce.order',
    'ecommerce.checkout',
])

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'oscar.apps.basket.middleware.BasketMiddleware',
    'ecommerce.core.middlewares.currency_middleware',
    'ecommerce.flatpages.middleware.FlatpageFallbackMiddleware',
]

ROOT_URLCONF = 'ecommerce.urls'

from oscar import OSCAR_MAIN_TEMPLATE_DIR

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(PROJECT_DIR, 'templates'),
            OSCAR_MAIN_TEMPLATE_DIR
        ],
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.i18n',
                'django.contrib.messages.context_processors.messages',

                'oscar.apps.search.context_processors.search_form',
                'oscar.apps.promotions.context_processors.promotions',
                'oscar.apps.checkout.context_processors.checkout',
                'oscar.apps.customer.notifications.context_processors.notifications',
                'ecommerce.core.context_processors.metadata',

                'constance.context_processors.config',

                'sekizai.context_processors.sekizai',
            ],
            'loaders': (
                (
                    'ecommerce.core.loaders.ThemeLoader',
                    os.path.join(PROJECT_DIR, 'templates', 'themes')
                ),
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
            ),

        },
    },
]

from ecommerce.core.oscar_settings import *


AUTH_USER_MODEL = 'core.User'

# ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_VERIFICATION = 'optional'
ACCOUNT_FORMS = {
    'signup': 'ecommerce.core.forms.SignupForm'
}
ACCOUNT_ADAPTER = 'ecommerce.core.adapter.EcommerceAccountAdapter'
ACCOUNT_LOGOUT_ON_GET = True
ACCOUNT_LOGOUT_REDIRECT_URL = '/accounts/login/'
ACCOUNT_SESSION_REMEMBER = False

AUTHENTICATION_BACKENDS = (
    'allauth.account.auth_backends.AuthenticationBackend',
    # 'oscar.apps.customer.auth_backends.EmailBackend',
    'django.contrib.auth.backends.ModelBackend',
)

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.simple_backend.SimpleEngine',
    },
}

WSGI_APPLICATION = 'ecommerce.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ATOMIC_REQUESTS': True,
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/
STATICFILES_DIRS = (
    os.path.join(PROJECT_DIR, 'static'),
)

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

from django.urls import reverse_lazy

HYPER_IMAGE_API = reverse_lazy('dashboard:extensions-image-api')

CONSTANCE_IGNORE_ADMIN_VERSION_CHECK = True

CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'

CONSTANCE_ADDITIONAL_FIELDS = {
    'theme_choice_field': ['django.forms.fields.ChoiceField', {
        'widget': 'django.forms.Select',
        'choices': (
            ("default", "Default"),
            ("theme_1", "Electronics Store"),
            ("theme_2", "Grocery Store"),
            ("theme_3", "Motor Vehicle"),
            ("theme_4", "Omega Tech"),
            ("theme_5", "Divine IT Pricing"),
        )
    }],
    'image_field': ['django.forms.ImageField', {'required': False}],
    'file_field': ['django.forms.FileField', {'required': False}],
    'char_field': ['django.forms.CharField', {}],
    'hyper_field': ['djangohyper.fields.HyperFormField', {'required': False}]
}

CONSTANCE_CONFIG = {
    'shop_name': ('E-Commerce', 'E-Commerce Brand name'),
    'shop_tagline': ('', 'Tagline / Slogan'),
    'shop_hotline': ('', 'Shop Hotline'),
    'google_analytics_id': ('', 'Google Analytics'),
    'gtags_container_id': ('', 'Google Tag Manager'),
    'theme': ('theme_5', 'Select theme', 'theme_choice_field'),
    'logo': ('', 'Logo', 'image_field'),
    'favicon': ('', 'Favicon', 'image_field'),
    'topbar_menu': ('', 'Topbar Menu', 'hyper_field'),
    'header_content': ('', 'Header Content', 'hyper_field'),
    'main_menu': ('', 'Main Menu', 'hyper_field'),
    'footer_content': ('', 'Footer Content', 'hyper_field'),
    'quotation_template': ('', 'Quotation Template', 'file_field'),
    'partial_render_base': ('https://divineit.net', 'Used to get header and footer from remote'),
    'pdf_generation_command': ('soffice --headless --convert-to pdf --outdir [output_dir] [input_path]', 'Command to generate pdf'),

    'NUMBER_OF_PRODUCT_IN_GROUP': (3, 'Number of products to show in a group slider'),

    'ADS_URL': ('', 'Autodeploy server url'),
    'ADS_ACCESS_TOKEN': ('', 'Autodeploy Access Token'),
    'ADS_CLIENT_CODE': ('', 'Autodeploy Client Code'),

    'ENABLE_EXPIRE_NOTIFICATION': (True, 'Enable Expire Notification'),
    'EXPIRE_NOTIFICATION_PERIOD_SLAB': ('1, 3, 7, 15', 'Comma separated values'),

    'ADMIN_EMAIL': ('system@divine-it.net', 'Administrative email'),
    'DEFAULT_BCC_FOR_ALL_EMAIL': ('system@divine-it.net', 'Comma Separated Email Addresses'),
    'DEACTIVATION_GRACE_PERIOD_DAYS': (7, 'Deactivation grace period in days'),
    'USD_TO_BDT_RATE': (80, '1 USD = ? BDT'),
}

HYPER_EDITOR_BLOCK_CONFIG = {
    'slider': {
        'styles': [
            {'id': 'default', 'name': 'Default'},
            {'id': 'hero-slider-1', 'name': 'Hero slider background image with text'},
            {'id': 'customer_slider', 'name': 'Customer slider only image'},
        ]
    },
    'promotion': {
        'styles': [
            {'id': 'default', 'name': 'Default'},
            {'id': 'promotion-block-two', 'name': 'Promotion block with feature images'},
        ]
    },
    'category': {
        'styles': [
            {'id': 'default', 'name': 'Default'},
            {'id': 'feature-category-block', 'name': 'Feature category block'},
            {'id': 'Item-category', 'name': 'Prism Products'},
        ]
    },
    'top_category': {
        'styles': [
            {'id': 'default', 'name': 'Default'},
            {'id': 'top-category-slider', 'name': 'Top category slider style'},
        ]
    },
    'contentbox': {
        'styles': [
            {'id': 'default', 'name':'Default'},
            {'id': 'contentbox1', 'name':'Contentbox support image and button'},
            {'id': 'contentbox2', 'name':'Contentbox support icon heading and downloadable link'},
            {'id': 'contentbox3', 'name': 'solid action button'},
            {'id': 'contentbox4', 'name': 'Contentbox with icon and details'},
        ]
    },

}

OSCAR_DEFAULT_CURRENCY = 'BDT'

OSCAR_CURRENCY_FORMAT = {
    'BDT': {
        'locale': 'bn_BD',
        'format': '¤#,##0.##'
    }
}

OSCARAPI_BLOCK_ADMIN_API_ACCESS = True

WHOOSH_INDEX_PATH = os.path.join(BASE_DIR, 'whoosh_index')

PHONENUMBER_DEFAULT_REGION = 'BD'

OSCAR_INITIAL_ORDER_STATUS = 'Quotation'
OSCAR_INITIAL_LINE_STATUS = 'Quotation'
OSCAR_ORDER_STATUS_PIPELINE = {
    'Quotation': ('Pending', 'Being processed', 'Cancelled',),
    'Pending': ('Being processed', 'Cancelled',),
    'Being processed': ('Processed', 'Cancelled',),
    'Cancelled': (),
}

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
        'PATH': WHOOSH_INDEX_PATH,
    },
}

OSCAR_HIDDEN_FEATURES = [
    'reviews',
    'wishlist'
]

FILTERING_STRATEGY_AND = True

DEFAULT_PARTNER = 'default'
PRODUCT_TYPE_CUSTOMIZABLE = 'customizable'
CUSTOMIZABLE_PRODUCT_OPTION_CODE = 'configuration'
CONFIG_IDENTIFIER_OPTION_CODE = 'for'
GOOGLE_SHEET_DOWNLOAD_FOLDER = 'pricing_sheets'

SESSION_NEXT_URL_KEY = 'NEXT_URL_KEY'

#### Email sender settings
EMAIL_HOST = 'in-v3.mailjet.com'
EMAIL_HOST_USER = 'dbcd9493d3a42c21e3f8cf8909fa5575'
EMAIL_HOST_PASSWORD = '4495fad4ca175606833b1ff7848700dc'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

OSCARAPI_OVERRIDE_MODULES = ['core.oscarapi_override']

OSCARAPI_PRODUCT_FIELDS = ("url", "id", "upc", "title", 'structure', 'parent', 'slug')
OSCARAPI_PRODUCTDETAIL_FIELDS = (
    "url",
    "upc",
    "id",
    "title",
    "slug",
    "description",
    "short_description",
    "logo",
    "banner_image",
    "featured",
    "structure",
    "date_created",
    "date_updated",
    "recommended_products",
    "attributes",
    "categories",
    "product_class",
    "images",
    "price",
    "availability",
    "options",
    "children",
)


SKIP_CHECKOUT_PREVIEW = True

LOG_LEVEL = 'INFO'



CSRF_TRUSTED_ORIGINS = [
    'www.prismerp.net',
    'www.divineit.net',
    'www.prismvat.com',
]

GEOIP_PATH = os.path.join(BASE_DIR, 'GeoLite2')


try:
    from .local import *
except Exception as e:
    print(e)


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'log_file': {
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/ecommerce.log'),
            'maxBytes': 1024*1024*10,
            'backupCount': 10,
        },
    },
    'loggers': {
        'django': {
            'handlers': ['log_file', 'console'],
            'level': LOG_LEVEL,
        },

        'autodeploy': {
            'handlers': ['log_file', 'console'],
            'level': LOG_LEVEL,
        },

        'ecommerce.core': {
            'handlers': ['log_file', 'console'],
            'level': LOG_LEVEL,
        }
    },
}

